<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EyeCTEventLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0o
        MCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCj/wAARCABKAEsDASIAAhEBAxEB/8QAGgABAQEBAQEBAAAAAAAAAAAAAAYFBAMC
        CP/EADQQAAIBAwMCAwYFAwUAAAAAAAECAwAEBQYREiExEyJBFBVRYYGRBzJCUnEXQ6FTdIKSsv/EABQB
        AQAAAAAAAAAAAAAAAAAAAAD/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwD9U0pSgHtU
        gdYyLfyE4i59zR3Rs2yIkQqJA3Anhvy4B/KW9O+23Wq81K4Oxt3tc/gbpQ0ZuJmdO3KK4Jk3+7uv8qaC
        qB3FKxtJXU0+IWC9YNfWbta3B/cyHYN8uS8W/hhWzQKVK5c3Wb1A2KtLy5s7G0iEt3LbHi7u35Iw+3TY
        AsduvVfjXVoeee4wIa5uZLrhcTxRzSgc3jSVlUtsBudgOvrQUFKUoFKUoFYF4gs9X2V3vtHfQNZuPi6b
        yR/48X/Fd+ay1vibZZJ1lkkduEUMKc5JW78VH8An4ADc1E2q5LWuQvpbme+wnuu6j9lsWVOXMIGEku2/
        JSWI4ggbD49gpBtjtaHrtDloNwPTx4h1+rIR9Iq27+6isrKe6uW4QwI0jsfRQNzUjdzXeoMBI0MaQ6iw
        90JPBDeUToN+IJ/RIjEA/tk+Irwlz9nrRMbjMRLzSd1nyMbAh7eJDuY3H6WZwE4n05fCg0RNJg9FX+Vm
        j2vpI5LyRD3MrDyp9PKn0Fbmn7I47B2FmxBeCBI2I9WAG5+p3rC123tEmCw6Fud/kImYD/ThPjNv8vIB
        /wAqrB2oFKUoFKUoIzWt1dWWpNNXFjZm7dHnM0anzCDwxzKj1YHhsPXqPWpzUeox/ULFnF5eyxtvcY0z
        e1zWzTRXI8TbgxDKF4dCCTv5yPXarbKEprTBuygo9vdRAn0Y+EwH2VvtXNmtDYbKZCG/KT2l5FJ4qy2k
        xi3fYjcgdCevqOvY7iglcTkNQy6xvcjZW2Ny9lbQizu5LCXwjcNssiFVclSU5MD5x+f5Cr3AZWwysc0l
        kpjnjfhcQyR8JYn27Ovx22+RHUEipxLm/wABrCwsJru5yWPvYZGKR2icrdw0YV3KAeU7sN9u/wAh02NQ
        Yq5E3vbBCNMtEoUq3RLqMf2nP/lv0n5EghnKi5T8U5HLBo8Lj1VV37S3DHcn5hIh/wB6sqivwxuY8vDm
        s+trNbSZG/cFJxs4WFREAf4KN9zVrQKUpQKUpQYerJBZ21pkiN1srlJHP7UbeNz9Fcn6VuA7jpXleQR3
        VrNbzLyilQo6/EEbEVB6e1beWLXuKy2HykyYuf2P2+2j8dZgFDKzKp5glWUnoRue9BSWLo+scshTaVLS
        16n1UtNsfvyH0rdPapUaoge5eaywWauZCoV5RYmIkDchd5OJO25+9fGR1fPBj7qaDTuaeSGJpArxKgOw
        J6sW29KDs0KyvhZygAX3hejp/uZKoaxtHWQsNN2MXiCV2QzSSDs7yEu5HyLMa2aBSlKBSlKBXJZ4+C0u
        r24gXjJeSCWXr3YIqb/ZRXXSgV8TRpNE8cihkcFWB7EHuK+6UHnbwpbwRwwqFjjUKqjsAOgFelKUClKU
        H//Z
</value>
  </data>
</root>