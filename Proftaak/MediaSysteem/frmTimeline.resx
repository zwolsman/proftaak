<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD0
        BAAAAk1TRnQBSQFMAwEBAAFQAQABUAEAAQ0BAAENAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABNAMA
        AQ0DAAEBAQABIAUAAZABChYAAxkEIwEzAyYBOAMmATgDJgE4AyYBOAMmATkDTgGUATkBZwFJAfYBKwF2
        AT4B/AFZAVwBWQHJAyoBQKAAA1oBvQFyAWwBaAHqAZ4BiwGEAfcBngGKAYQB9wGeAYoBhAH3AZ4BigGE
        AfcBbQF3AVAB+gFDAYYBZQH+AWABvQGQAf8BqAHZAb8B/wFJAa0BcQH/AVoBXAFaAc2gAAF5AWkBXQHw
        AfcB7QHlAf8B/AHrAd8B/wH8AesB3gH/AfwB6wHeAf8B/AHrAd4B/wFyAaQBggH/AXEBvwGZAf8B0gHs
        Ad0B/wHwAfkB9AH/AagB2gG/Af8BPQGCAUgB/aAAAYMBbgFfAfMBxQG0AaMB/wGmAYABUQH/AbIBigFX
        Af8BsgGKAVcB/wGyAYoBVwH/AWUBhwFUAf8BhQHHAaQB/wGhAdwBvAH/AdMB7AHfAf8BYwG/AZMB/wFB
        AWoBRwH5oAABhAFvAV8B8wHUAb0BpwH/AdMBoAFiAf8B5QGtAWsB/wHlAa0BawH/AeUBrQFrAf8BvwGl
        AWgB/wFqAagBcgH/AY8BywGrAf8BlQHNAa4B/wFMAYoBbAH+AU0BTgFNAZagAAGEAW8BXwHzAdMBvgGo
        Af8B0QGfAWEB/wHiAawBagH/AeIBqwFqAf8B4gGrAWoB/wHiAasBagH/Ab8BpQFoAf8BjQGaAWQB/wFu
        AZMBZQH/AX0BhAFqAfkDJgE5oAABhAFvAV8B8wHPAcQBrgH/Ac4BrgGAAf8B4AG7AYoB/wHcAbkBhwH/
        AdcBtAF1Af8B4QGzAXIB/wHhAbMBcgH/AdMBtAGIAf8BvgGrAZIB/wGeAYkBgwH3AyYBOKAAAYQBbwFf
        AfMB1wHPAbsB/wHfAckBnwH/AfMB2gGsAf8B8AHZAasB/wHtAdYBpgH/AfEB1QGmAf8B8AHUAaUB/wHn
        AdIBqAH/AcYBugGhAf8BngGKAYMB9wMmATigAAGEAW8BXwHzAd0B0gHBAf8B6QHSAaYB/wH8AeQBtQH/
        AfwB4wG1Af8B/AHkAbUB/wH9AeQBtQH/Af0B5AG1Af8B+AHgAbIB/wHPAcABpQH/AZ4BigGDAfcDJgE4
        oAABhAFwAV8B8wHUAcoBuAH/AcwBugGQAf8B3AHLAaAB/wHdAcoBnwH/AeMBywGfAf8B5QHNAaAB/wHn
        Ac8BowH/AeQBzQGiAf8BxQG3AZ4B/wGeAYoBgwH3AyYBOKAAAXkBagFhAfABxgHBAbgB/gHPAcgBtgH/
        AdEBzgG8Af8B1QHNAboB/wHbAc4BugH/AdsBzwG6Af8B3AHPAbsB/wHbAc8BugH/AdUBzQHAAf8BkwGB
        AXcB9gMmATigAANWAbQBeQFqAWEB8AGEAXABXwHzAYQBbwFfAfMBhAFvAV8B8wGEAW8BXwHzAYQBbwFf
        AfMBhAFuAV8B8wGEAW4BXwHzAYQBbwFfAfMDXAHJAxwBJ/8AbQABQgFNAT4HAAE+AwABKAMAATQDAAEN
        AwABAQEAAQEFAAFoFwAD/wEAAYAHAAGABwABgAcAAYAHAAGABwABgAcAAYAHAAGABwABgAcAAYAHAAGA
        BwABgAcAAf8B+AYACw==
</value>
  </data>
</root>